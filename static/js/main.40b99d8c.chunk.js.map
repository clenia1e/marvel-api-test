{"version":3,"sources":["components/favorite-button/FavoriteButton.js","components/rating/Rating.js","components/details/Details.js","components/loader/Loader.js","api/defaultParams.js","api/fetchComics.js","components/releases/Releases.js","components/search-bar/SearchBar.js","components/footer/Footer.js","api/fetchCharacter.js","Character.js","components/header/Header.js","components/toggle-button/ToggleButton.js","components/search-info/SearchInfo.js","components/characteres/Characteres.js","components/pagination/Pagination.js","api/fetchCharacters.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["FavoriteButton","isFavorite","isSize","setFavorite","className","onClick","src","alt","Rating","isRating","Details","character","favoritesStorage","localStorage","getItem","currentFavorites","JSON","parse","useState","localFavorites","setLocalFavorites","setLocalFavoriteState","currentList","setItem","stringify","isCharacterFavorite","id","favorites","length","find","favorite","name","restFavorites","filter","alert","setCharacterFavorite","description","comics","available","series","Date","modified","toLocaleDateString","thumbnail","path","extension","Loader","defaultParams","fetchComics","a","url","URL","search","URLSearchParams","toString","fetch","res","json","data","Releases","setcomics","isLoading","setIsLoading","useEffect","mounted","getComics","results","initialItems","comic","index","map","title","SearchBar","type","getCharacter","defaultValue","debounceFn","useCallback","_debounce","inputValue","placeholder","onChange","e","target","value","handleChange","Footer","fetchCharacter","Character","location","useLocation","history","useHistory","setcharacter","getHero","state","to","push","searchName","Header","props","ToggleButton","isActive","handleClick","role","SearchInfo","isAsc","setIsAsc","setIsOnlyFavorites","isOnlyFavorites","charactersLength","Characters","isloading","characters","characterList","Pagination","pageLimit","dataLimit","onPageChange","pages","Math","round","currentPage","setCurrentPage","changePage","event","pageNumber","Number","textContent","page","start","floor","Array","fill","_","idx","getPaginationGroup","item","fetchCharacters","urlParams","orderBy","offset","urlParamsWithName","nameStartsWith","Home","setPage","setIsloading","setcharacters","setName","total","setTotal","replace","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40b99d8c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FavoriteButton.css\";\n\nconst FavoriteButton = ({ isFavorite, isSize, setFavorite }) => {\n  return (\n    <>\n      <button\n        data-testid=\"character-favorite\"\n        className=\"favorite-button-hero\"\n        onClick={setFavorite}\n      >\n        <img\n          data-testid=\"icon-favorite\"\n          className={isSize ? \"favorite-hero-button\" : \"favorite-button-detail\"}\n          src={isFavorite ? \"/favorito_01.svg\" : \"/favorito_02.svg\"}\n          alt=\"ícone de favorito do herói\"\n        />\n      </button>\n    </>\n  );\n};\n\nexport default FavoriteButton;\n","import React from \"react\";\nimport \"./Rating.css\";\n\nconst Rating = ({ isRating }) => {\n  return (\n    <>\n      <div className=\"container-rating\">\n        <h3 className=\"hero-rating\">Rating:</h3>\n        <img\n          className=\"rating\"\n          src={isRating ? \"/avaliacao_on.svg\" : \"/avaliacao_off.svg\"}\n          alt=\"ícone de avaliação do herói\"\n        />\n        <img\n          className=\"rating\"\n          src={isRating ? \"/avaliacao_on.svg\" : \"/avaliacao_off.svg\"}\n          alt=\"ícone de avaliação do herói\"\n        />\n        <img\n          className=\"rating\"\n          src={isRating ? \"/avaliacao_on.svg\" : \"/avaliacao_off.svg\"}\n          alt=\"ícone de avaliação do herói\"\n        />\n        <img\n          className=\"rating\"\n          src={isRating ? \"/avaliacao_on.svg\" : \"/avaliacao_off.svg\"}\n          alt=\"ícone de avaliação do herói\"\n        />\n        <img\n          className=\"rating\"\n          src={isRating ? \"/avaliacao_on.svg\" : \"/avaliacao_off.svg\"}\n          alt=\"ícone de avaliação do herói\"\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Rating;\n","import React, { useState } from \"react\";\nimport \"./Details.css\";\n\nimport FavoriteButton from \"../favorite-button/FavoriteButton\";\nimport Rating from \"../rating/Rating\";\n\nconst Details = ({ character }) => {\n  const favoritesStorage = localStorage.getItem(\"favorites\") || \"[]\";\n  const currentFavorites = JSON.parse(favoritesStorage);\n\n  const [localFavorites, setLocalFavorites] = useState(currentFavorites);\n\n  const setLocalFavoriteState = (currentList) => {\n    localStorage.setItem(\"favorites\", JSON.stringify(currentList));\n    setLocalFavorites([...currentList]);\n  };\n  const setCharacterFavorite = (character) => {\n    if (isCharacterFavorite(character.id)) {\n      const restFavorites = localFavorites.filter(\n        (favorite) => favorite.id !== character.id\n      );\n      setLocalFavoriteState(restFavorites);\n      return;\n    }\n\n    if (localFavorites.length > 4) {\n      alert(\"somente 5 favoritos podem ser adicionados\");\n      return;\n    }\n\n    if (localFavorites.length < 1) {\n      const currentFavorite = [character];\n      setLocalFavoriteState(currentFavorite);\n      return;\n    }\n\n    setLocalFavoriteState([...localFavorites, character]);\n  };\n\n  const isCharacterFavorite = (id) => {\n    const favorites = localStorage.getItem(\"favorites\");\n    const currentFavorites = JSON.parse(favorites);\n    if (currentFavorites && currentFavorites.length > 0) {\n      return currentFavorites.find((favorite) => favorite.id === id);\n    }\n    return false;\n  };\n  return (\n    <>\n      {/* <div className=\"container-map-hero\">\n        {character.map((hero) => ( */}\n      <div className=\"container-detail\">\n        <div className=\"container-resume-hero\">\n          <div className=\"container-title\">\n            <h3 className=\"hero-name-detail\"> {character.name}</h3>\n            <FavoriteButton\n              isSize={false}\n              setFavorite={() => setCharacterFavorite(character)}\n              isFavorite={isCharacterFavorite(character.id)}\n            />\n          </div>\n          <p className=\"hero-resume\"> {character.description}</p>\n\n          <div className=\"cantainer-hero-detail\">\n            <div className=\"\">\n              <h3 className=\"hero-detail\">Quadrinhos</h3>\n              <div className=\"icon-value\">\n                <img\n                  className=\"detail-icon\"\n                  src=\"/ic_quadrinhos.svg\"\n                  alt=\"logo menor Marvel\"\n                />\n                <h2 className=\"value\">{character?.comics?.available}</h2>\n              </div>\n            </div>\n            <div className=\"\">\n              <h3 className=\"hero-detail\">Filmes</h3>\n              <div className=\"icon-value\">\n                <img\n                  className=\"detail-icon-movie\"\n                  src=\"/ic_trailer.svg\"\n                  alt=\"logo menor Marvel\"\n                />\n                <h2 className=\"value\">{character?.series?.available}</h2>\n              </div>\n            </div>\n          </div>\n          <div className=\"container-rating\">\n            <Rating isRating={true} />\n          </div>\n          <div className=\"container-last-publication\">\n            <h3 className=\"hero-detail\">Último quadrinho:</h3>\n            <div className=\"last-publication\">\n              {new Date(character.modified).toLocaleDateString()}\n            </div>\n          </div>\n        </div>\n        <div>\n          <img\n            className=\"hero-img\"\n            src={`${character.thumbnail.path}.${character.thumbnail.extension}`}\n            alt=\"hulk\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Details;\n","import React from \"react\";\nimport \"./Loader.css\";\n\nconst Loader = () => {\n  return (\n    <div className=\"container-loader\">\n      {\" \"}\n      <div className=\"loader\"></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","const isDevelopment =\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\n\nconst params = {\n  apikey: process.env.REACT_APP_API_KEY,\n  hash: process.env.REACT_APP_API_HASH,\n  ts: process.env.REACT_APP_API_TS,\n};\n\nconst defaultParams = isDevelopment ? params : {};\n\nexport default defaultParams;\n","import defaultParams from \"./defaultParams\";\n\nconst fetchComics = async ({ id }) => {\n  const url = new URL(\n    `https://gateway.marvel.com:443/v1/public/characters/${id}/comics`\n  );\n\n  url.search = new URLSearchParams(defaultParams).toString();\n  const res = await fetch(url);\n  const json = await res.json();\n  return json?.data;\n};\nexport default fetchComics;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Releases.css\";\nimport Loader from \"../loader/Loader\";\nimport fetchComics from \"../../api/fetchComics\";\n\nconst Releases = ({ id }) => {\n  const [comics, setcomics] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // fix for react-testing-library https://medium.com/rd-shipit/testing-asynchronous-code-with-jest-and-testing-library-react-cfc185d7bd78\n    let mounted = true;\n    const fetchComics = async () => {\n      const results = await getComics();\n      if (mounted) {\n        setcomics(results);\n        setIsLoading(false);\n      }\n    };\n\n    fetchComics();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const getComics = async () => {\n    const data = await fetchComics({ id });\n    return data?.results;\n  };\n\n  const initialItems = comics.filter((comic, index) => index < 10);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n  return (\n    <div className=\"container-releases\" key={id}>\n      <p className=\"title-release\">Últimos lançamentos</p>\n      <div className=\"characters-releases\">\n        {initialItems.map((comic) => (\n          <div key={comic.id} className=\"releases\">\n            <img\n              className=\"img-releases\"\n              src={`${comic.thumbnail.path}.${comic.thumbnail.extension}`}\n              alt=\"ícone de navegacao\"\n            />\n            <h4 className=\"releases-name\">{comic.title}</h4>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Releases;\n","import React, { useCallback } from \"react\";\nimport _debounce from \"lodash.debounce\";\nimport \"./SearchBar.css\";\n\nconst SearchBar = ({ type, getCharacter, defaultValue }) => {\n  const handleDebounceFn = (inputValue) => {\n    getCharacter(inputValue);\n  };\n  const debounceFn = useCallback(_debounce(handleDebounceFn, 1500), []);\n\n  const handleChange = (e) => {\n    debounceFn(e.target.value);\n  };\n  return (\n    <>\n      <div className=\"container-search\">\n        <div className=\"container-wrapper\">\n          <div className=\"container-icon\">\n            <img src=\"/ic_busca_menor.svg\" alt=\"ícone de navegacao\" />\n          </div>\n          <input\n            data-testid=\"search-input\"\n            className={\n              type == \"home\"\n                ? \"container-searchbar--red\"\n                : \"container-searchbar\"\n            }\n            defaultValue={defaultValue}\n            placeholder=\"Procure por heróis\"\n            onChange={(e) => handleChange(e)}\n          ></input>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <>\n      <div className=\"footer\"></div>\n    </>\n  );\n};\n\nexport default Footer;\n","import defaultParams from \"./defaultParams\";\n\nconst fetchCharacter = async ({ id }) => {\n  const url = new URL(\n    `https://gateway.marvel.com:443/v1/public/characters/${id}`\n  );\n\n  url.search = new URLSearchParams(defaultParams).toString();\n  const res = await fetch(url);\n  const json = await res.json();\n  return json?.data;\n};\nexport default fetchCharacter;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport \"./Character.css\";\nimport Details from \"./components/details/Details\";\nimport Releases from \"./components/releases/Releases\";\nimport SearchBar from \"./components/search-bar/SearchBar\";\nimport Footer from \"./components/footer/Footer\";\nimport Loader from \"./components/loader/Loader\";\nimport fetchCharacter from \"./api/fetchCharacter\";\n\nconst Character = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [character, setcharacter] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getHero();\n  }, []);\n\n  const goToCharacterSearch = (name) => {\n    history.push(`/`, { searchName: name });\n  };\n\n  const getHero = async () => {\n    const data = await fetchCharacter({ id: location?.state?.id });\n    setcharacter(data?.results[0]);\n    setIsLoading(false);\n  };\n  if (isLoading) {\n    return <Loader />;\n  }\n  return (\n    <>\n      <div className=\"character-page\">\n        <header className=\"container-info-hero\">\n          <Link to=\"/\">\n            <img\n              className=\"logo-small\"\n              src=\"/logo_menor.svg\"\n              alt=\"logo menor Marvel\"\n            />\n          </Link>\n          <SearchBar\n            className=\"search-hero\"\n            getCharacter={goToCharacterSearch}\n          />\n        </header>\n        <Details setcharacter={setcharacter} character={character} />\n\n        <Releases id={character.id} />\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Character;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = (props) => {\n  return (\n    <>\n      <div className={`${props.className} container-header`}>\n        <div className=\"container-logo\">\n          <img className=\"img-logo\" src=\"logo.svg\" alt=\"ícone da Marvel\" />\n        </div>\n        <h2 className=\"main-text\">EXPLORE O UNIVERSO</h2>\n        <p className=\"secundary-text\">\n          Mergulhe no domínio deslumbrante de todos os personagens clássicos que\n          você ama - e aqueles que você descobrirá em breve!\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./ToggleButton.css\";\n\nconst ToggleButton = ({ isActive, handleClick }) => {\n  return (\n    <>\n      <img\n        role=\"presentation\"\n        data-testid=\"toggle-asc\"\n        onClick={() => handleClick(!isActive)}\n        className=\"img-toggle\"\n        src={isActive ? \"toggle_on.svg\" : \"toggle_off.svg\"}\n        alt=\"ícone de seleção\"\n      />\n    </>\n  );\n};\n\nexport default ToggleButton;\n","import React from \"react\";\nimport \"./SearchInfo.css\";\nimport ToggleButton from \"../toggle-button/ToggleButton\";\n\nconst SearchInfo = ({\n  isAsc,\n  setIsAsc,\n  setIsOnlyFavorites,\n  isOnlyFavorites,\n  charactersLength,\n}) => {\n  return (\n    <>\n      <div className=\"container-info\">\n        <div className=\"info-length\">Encontrados {charactersLength} heróis</div>\n\n        <div className=\"info-buttons\">\n          <div className=\"order-button\">\n            <img\n              className=\"img-hero\"\n              src=\"ic_heroi.svg\"\n              alt=\"ícone de navegacao\"\n            />\n            Ordenar por nome - A/Z\n          </div>\n          <ToggleButton isActive={isAsc} handleClick={() => setIsAsc(!isAsc)} />\n\n          <div className=\"favorite-button\">\n            <button\n              className=\"button-favorite\"\n              data-testid=\"toggle-favorite\"\n              onClick={setIsOnlyFavorites}\n            >\n              <img\n                className=\"img-favorite\"\n                src=\"favorito_01.svg\"\n                alt=\"ícone de navegacao\"\n              />\n              {isOnlyFavorites ? \"mostrar todos\" : \"Somente favoritos\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchInfo;\n","import { useHistory } from \"react-router-dom\";\nimport React from \"react\";\nimport \"./Characteres.css\";\nimport FavoriteButton from \"../favorite-button/FavoriteButton\";\nimport Loader from \"../loader/Loader\";\n\nconst Characters = ({\n  isloading,\n  characters,\n  isOnlyFavorites,\n  setCharacterFavorite,\n  isCharacterFavorite,\n  localFavorites,\n}) => {\n  const history = useHistory();\n\n  if (isloading) {\n    return <Loader />;\n  }\n\n  const characterList = isOnlyFavorites ? localFavorites : characters;\n\n  return (\n    <>\n      <div className=\"characters\">\n        {characterList.map((character) => (\n          <div key={character.id} className=\"character-row\">\n            <div\n              role=\"presentation\"\n              onClick={() =>\n                history.push(`/character/${character.id}`, { id: character.id })\n              }\n              className=\"character-router\"\n            >\n              <img\n                className=\"img-characters\"\n                src={`${character.thumbnail.path}.${character.thumbnail.extension}`}\n                alt=\"Imagem do herói\"\n              />\n            </div>\n            <div className=\"characters-info\">\n              <h4 className=\"hero-name\">{character.name}</h4>\n              <FavoriteButton\n                isSize={true}\n                isFavorite={isCharacterFavorite(character.id)}\n                setFavorite={() => setCharacterFavorite(character)}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Characters;\n","import React, { useState } from \"react\";\nimport \"./Pagination.css\";\n\nconst Pagination = ({ length, pageLimit, dataLimit, onPageChange }) => {\n  const pages = Math.round(length / dataLimit);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const goToNextPage = () => {\n    setCurrentPage(currentPage + 1);\n    onPageChange(currentPage + 1);\n  };\n\n  function goToPreviousPage() {\n    setCurrentPage((page) => page - 1);\n    onPageChange((page) => page - 1);\n  }\n\n  function changePage(event) {\n    const pageNumber = Number(event.target.textContent);\n    setCurrentPage(pageNumber);\n    onPageChange(pageNumber);\n  }\n\n  const getPaginationGroup = () => {\n    let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n    return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n  };\n\n  return (\n    <div className=\"pagination\">\n      <button\n        onClick={goToPreviousPage}\n        className={`prev ${currentPage === 1 ? \"disabled\" : \"\"}`}\n      >\n        prev\n      </button>\n\n      {getPaginationGroup().map((item, index) => {\n        if (item > pages) {\n          return null;\n        }\n        return (\n          <button\n            data-testid=\"pagination-button\"\n            key={index}\n            onClick={changePage}\n            className={`paginationItem ${\n              currentPage === item ? \"active\" : null\n            }`}\n          >\n            <span>{item}</span>\n          </button>\n        );\n      })}\n\n      <button\n        onClick={goToNextPage}\n        data-testid=\"pagination-next\"\n        className={`next ${currentPage === pages ? \"disabled\" : \"\"}`}\n      >\n        next\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import defaultParams from \"./defaultParams\";\n\nconst fetchCharacters = async ({ name, searchName, isAsc, page }) => {\n  const url = new URL(\"https://gateway.marvel.com:443/v1/public/characters\");\n\n  const urlParams = {\n    ...defaultParams,\n    orderBy: `${isAsc ? \"\" : \"-\"}name`,\n    offset: page ? (page - 1) * 20 : 0,\n  };\n\n  const nameStartsWith = name || searchName;\n\n  const urlParamsWithName = !nameStartsWith\n    ? urlParams\n    : { ...urlParams, nameStartsWith };\n\n  url.search = new URLSearchParams(urlParamsWithName).toString();\n  const res = await fetch(url);\n  const json = await res.json();\n  return json?.data;\n};\nexport default fetchCharacters;\n","// import { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport Header from \"./components/header/Header\";\nimport SearchBar from \"./components/search-bar/SearchBar\";\nimport SearchInfo from \"./components/search-info/SearchInfo\";\nimport Characters from \"./components/characteres/Characteres\";\nimport Footer from \"./components/footer/Footer\";\nimport Pagination from \"./components/pagination/Pagination\";\nimport fetchCharacters from \"./api/fetchCharacters\";\n\nconst Home = () => {\n  const [page, setPage] = useState(0);\n  const [isloading, setIsloading] = useState(true);\n  const [characters, setcharacters] = useState([]);\n  const [isAsc, setIsAsc] = useState(true);\n  const [name, setName] = useState(null);\n  const [total, setTotal] = useState(0);\n\n  const [isOnlyFavorites, setIsOnlyFavorites] = useState(null);\n  const favoritesStorage = localStorage.getItem(\"favorites\") || \"[]\";\n  const currentFavorites = JSON.parse(favoritesStorage);\n\n  const { state } = useLocation();\n\n  const searchName = state?.searchName;\n\n  const history = useHistory();\n\n  const [localFavorites, setLocalFavorites] = useState(currentFavorites);\n\n  const setLocalFavoriteState = (currentList) => {\n    localStorage.setItem(\"favorites\", JSON.stringify(currentList));\n    setLocalFavorites([...currentList]);\n  };\n\n  const setCharacterFavorite = (character) => {\n    if (isCharacterFavorite(character.id)) {\n      const restFavorites = localFavorites.filter(\n        (favorite) => favorite.id !== character.id\n      );\n      setLocalFavoriteState(restFavorites);\n      return;\n    }\n\n    if (localFavorites.length > 4) {\n      alert(\"somente 5 favoritos podem ser adicionados\");\n      return;\n    }\n\n    if (localFavorites.length < 1) {\n      const currentFavorite = [character];\n      setLocalFavoriteState(currentFavorite);\n      return;\n    }\n\n    setLocalFavoriteState([...localFavorites, character]);\n  };\n\n  const isCharacterFavorite = (id) => {\n    if (localFavorites.length > 0) {\n      return localFavorites.find((favorite) => favorite.id === id);\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    getCharacter();\n    return () => history.replace({});\n  }, [isAsc, searchName, name, page]);\n\n  const getCharacter = async () => {\n    setIsloading(true);\n    const data = await fetchCharacters({ name, searchName, isAsc, page });\n    setTotal(data?.total);\n    setcharacters(data?.results);\n    setIsloading(false);\n  };\n\n  const setNameHome = (name) => {\n    setName(name);\n    setPage(0);\n    history.replace({});\n  };\n\n  return (\n    <>\n      <Header className=\"header-root\" />\n      <SearchBar\n        type=\"home\"\n        setName={setNameHome}\n        value={name}\n        getCharacter={setName}\n        defaultValue={searchName}\n      />\n      <SearchInfo\n        setIsAsc={setIsAsc}\n        isAsc={isAsc}\n        isOnlyFavorites={isOnlyFavorites}\n        setIsOnlyFavorites={() => setIsOnlyFavorites(!isOnlyFavorites)}\n        charactersLength={\n          isOnlyFavorites ? localFavorites.length : characters.length\n        }\n      />\n      <Characters\n        setPage={setPage}\n        page={page}\n        isloading={isloading}\n        characters={characters}\n        isOnlyFavorites={isOnlyFavorites}\n        setCharacterFavorite={setCharacterFavorite}\n        isCharacterFavorite={isCharacterFavorite}\n        localFavorites={localFavorites}\n      />\n      {!isOnlyFavorites && (\n        <Pagination\n          dataLimit={20}\n          length={total}\n          pageLimit={3}\n          onPageChange={setPage}\n        />\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Character from \"./Character\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"root\">\n        <Router>\n          <Switch>\n            <Route path=\"/character\">\n              <Character />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}